# from hugchat import hugchat
# from hugchat.login import Login

# # Function for generating LLM response
# def generate_response(prompt_input, email, passwd):
#     # Hugging Face Login
#     sign = Login(email, passwd)
#     cookies = sign.login()
#     # Create ChatBot
#     chatbot = hugchat.ChatBot(cookies=cookies.get_dict())
#     return chatbot.chat(prompt_input)

# questions = "Create the react js interview questions"
# response = generate_response(questions, "arsalanbashir831@gmail.com", "Arsalan@2206")

# print(response)


def generate_response(prompt_input, email, passwd):
    sign = Login(email, passwd)
    cookies = sign.login()
    chatbot = hugchat.ChatBot(cookies=cookies.get_dict())
    return chatbot.chat(prompt_input)

@app.route('/question_generation', methods=["POST"])
def question_generations():
    movie_name = request.json.get("movie_name")
    questions = "Create me 5 multiple-choice questions related to the movie" + movie_name + "it should be shuffled and mention its correct option:"
    response = generate_response(questions, "arsalanbashir831@gmail.com", "Arsalan@2206")
    return jsonify({"questions": response})

     
# from flask import Flask, request, jsonify
# from transformers import pipeline
# from hugchat import hugchat

# app = Flask(__name__)

# # def generate_response(prompt_input, email, passwd):
# #     sign = Login(email, passwd)
# #     cookies = sign.login()
# #     chatbot = hugchat.ChatBot(cookies=cookies.get_dict())
# #     return chatbot.chat(prompt_input)
# # Initialize the Hugchat client with your own login and signup credentials
# hugchat_client = hugchat.ChatBot(Login("arsalanbashir831@gmail.com", "Arsalan@2206"))

# @app.route('/question_generation', methods=["POST"])
# def generate_quiz():
#     # Get the movie name from the JSON request
#     movie_name = request.json.get("movie_name")

#     # Generate questions related to the movie using Hugchat API
#     questions = hugchat_client.generate_questions(f"Create me 5 multiple-choice questions related to the movie {movie_name}.")

#     # Parse the questions generated by the API
#     quiz = parse_questions(questions)

#     return jsonify({"quiz": quiz})

# def parse_questions(questions):
#     parsed_questions = []

#     for question in questions:
#         question_text = question["question"]
#         options = question["options"]
#         correct_option = question["correct_option"]

#         # Shuffle the options to make the quiz more dynamic
#         import random
#         random.shuffle(options)

#         # Add the correct option to the shuffled options
#         options.insert(random.randint(0, len(options)), correct_option)

#         parsed_question = {
#             "question": question_text,
#             "options": options,
#             "correct_option": correct_option
#         }
#         parsed_questions.append(parsed_question)

#     return parsed_questions

# if __name__ == "__main__":
#     app.run(debug=True)
